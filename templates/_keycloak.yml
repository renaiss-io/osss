{{- define "osss.yml" -}}
---
id: osss
realm: osss
enabled: true
roles:
  client:
    grafana-oauth: []
users:
- id: test
  email: test@example.com
  firstName: Test
  lastName: Test
  createdTimestamp: 1708463938045
  username: test
  enabled: true
  totp: false
  emailVerified: true
  credentials:
  - id: 616e51a1-c671-47a4-bfe7-d99a5074802e
    type: password
    userLabel: My password
    createdDate: 1708463947457
    secretData: '{"value":"3ZPSl7/19IzhuCZCsoQI1E6Aj3EA08guyee6o7EWG+0=","salt":"kYx1y7Ffpuu562pD2OQogg==","additionalParameters":{}}'
    credentialData: '{"hashIterations":27500,"algorithm":"pbkdf2-sha256","additionalParameters":{}}'
  disableableCredentialTypes: []
  requiredActions: []
  realmRoles:
  - default-roles-osss
  notBefore: 0
  groups: []
clients:
- id: grafana-oauth
  name: grafana
  clientId: grafana-oauth
  secret: nuWbw2dO8KAiU8ZMEO5KzQWqbt42dZyW
  description: 'Client for grafana SSO'
  rootUrl: http://grafana.localhost
  adminUrl: http://grafana.localhost
  baseUrl: http://grafana.localhost
  enabled: true
  clientAuthenticatorType: client-secret
  redirectUris:
  - http://grafana.localhost/login/generic_oauth
  webOrigins:
  - http://grafana.localhost
  standardFlowEnabled: true
  implicitFlowEnabled: false
  directAccessGrantsEnabled: true
  serviceAccountsEnabled: false
  publicClient: false
  frontchannelLogout: true
  protocol: openid-connect
  defaultClientScopes:
  - web-origins
  - acr
  - profile
  - roles
  - email
  optionalClientScopes:
  - address
  - phone
  - offline_access
  - microprofile-jwt
{{- end -}}
